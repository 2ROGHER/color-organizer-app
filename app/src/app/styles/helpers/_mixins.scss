// 1. prototype

// @mixin base-font-family-sizing(
//   $current-font-family: $base-font-family
// ) {
//   //1. Check what $base-font-family we are using
//   // if  the $base-font-family-serif we need to multiply:
//   // our $base-font-size by 1.25 and increase
//   // our $base-line-height accordingly

//    // 2.
//   // Otherwise, a font-family we haven't set
//   // specific values for has been set so we
//   // should leave the browser defaults in place.

//   @if $current-font-family == $base-font-family-serif {
//     content: 'serif';
//   } @else {
//     content: 'not serif';
//   }
// }

// 2. Real thing
@use "./functions" as *;

@mixin base-font-family-sizing($current-font-family: $base-font-family) {
  //1. Check what $base-font-family we are using
  // if  the $base-font-family-serif we need to multiply:
  // our $base-font-size by 1.25 and increase
  // our $base-line-height accordingly

  // 2.
  // Otherwise, a font-family we haven't set
  // specific values for has been set so we
  // should leave the browser defaults in place.

  font-family: base-font-size-calc();
  line-height: $base-line-height;
  margin-bottom: $base-font-size * $base-line-height;

  @if $current-font-family == $base-font-family-serif {
    font-size: $base-font-size * 1.15;
  } @else {
    font-size: $base-font-size;
  }
}

@mixin base-headings-font-family-sizing($heading: 2, $current-font-family: $base-headings-font-family) {
  font-family: $current-font-family;
  font-size: base-heading-sizes-calc($heading, $current-font-family);
  line-height: base-heading-line-heading($heading, $current-font-family);
}

// NOTE: The input variables can be other tyupes of data as other functios, other mixins inside mixins etc.
// FOR  LOOP MIXIN
@mixin base-headings {
  // @for $i from 1 to 6 {
  //   h#{$i} { // [#] represent concat in other languages
  //     @include base-headings-font-family-sizing($i, $base-headings-font-family)
  //   }
  // }

  // Nesting lists or [mapping] in SASS
  $base-headings: (
    (h1, $base-headings-font-family),
    (h2, $base-font-family),
    (h3, $base-headings-font-family),
    (h4, $base-headings-font-family),
    (h5, $base-headings-font-family),
    (h6, $base-headings-font-family)
  );

  // @for $i from 1 through 6 {
  //   h#{$i} {
  //     // [#] represent concat in other languages
  //     @include base-headings-font-family-sizing($i, nth($base-headings, $i));
  //   }
  // }

  // WHILE LOOP
  $i: 1;
  @each $heading, $family in $base-headings {
    #{$heading} {
      @include base-headings-font-family-sizing($i, $family);
    }
    $i: $i + 1;
  }
}
